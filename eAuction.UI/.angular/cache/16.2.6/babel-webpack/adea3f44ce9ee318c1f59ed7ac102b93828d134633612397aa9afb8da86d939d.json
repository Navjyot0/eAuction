{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport { Emitters } from '../emitters/emitters';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      UserName: new FormControl(''),\n      Password: new FormControl('')\n    });\n  }\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n    this.http.post(\"https://localhost:5001/Account\", this.loginForm.value, {\n      withCredentials: true\n    }).subscribe(res => {\n      this.router.navigate(['/']);\n      Emitters.authEmitter.emit(true);\n    }, err => {\n      Emitters.authEmitter.emit(false);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"h3\", \"mb-3\", \"fw-normal\"], [1, \"form-floating\"], [\"formControlName\", \"UserName\", \"type\", \"email\", \"id\", \"floatingInput\", \"placeholder\", \"name@example.com\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"formControlName\", \"Password\", \"type\", \"password\", \"id\", \"floatingPassword\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"floatingPassword\"], [1, \"checkbox\", \"mb-3\"], [\"type\", \"checkbox\", \"value\", \"remember-me\"], [\"type\", \"submit\", 1, \"w-100\", \"btn\", \"btn-lg\", \"btn-primary\"], [1, \"mt-5\", \"mb-3\", \"text-body-secondary\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Please sign in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementStart(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Email address\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\");\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵtext(14, \" Remember me \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 9);\n        i0.ɵɵtext(16, \"Sign in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 10);\n        i0.ɵɵtext(18, \"\\u00A9 2017\\u20132023\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["FormGroup","FormControl","Emitters","LoginComponent","constructor","http","router","loginForm","UserName","Password","onSubmit","post","value","withCredentials","subscribe","res","navigate","authEmitter","emit","err","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["D:\\FSE_Navjyot\\Git_Repo\\eAuction\\eAuction.UI\\src\\app\\login\\login.component.ts","D:\\FSE_Navjyot\\Git_Repo\\eAuction\\eAuction.UI\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Router } from '@angular/router';\r\nimport { Emitters } from '../emitters/emitters';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  loginForm = new FormGroup({\r\n    UserName:new FormControl(''),\r\n    Password:new FormControl('')\r\n  });\r\n\r\n  constructor(\r\n    private http:HttpClient,\r\n    private router:Router\r\n  ){};\r\n\r\n  onSubmit() {\r\n    // TODO: Use EventEmitter with form value\r\n    this.http.post(\"https://localhost:5001/Account\", this.loginForm.value, {withCredentials:true})\r\n      .subscribe(res=>{\r\n        this.router.navigate(['/']);\r\n        Emitters.authEmitter.emit(true);\r\n      },\r\n      err=>{\r\n        Emitters.authEmitter.emit(false);\r\n      }\r\n      );\r\n  }\r\n}\r\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h1 class=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n\r\n    <div class=\"form-floating\">\r\n      <input formControlName=\"UserName\" type=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\" required>\r\n      <label for=\"floatingInput\">Email address</label>\r\n    </div>\r\n    <div class=\"form-floating\">\r\n      <input formControlName=\"Password\" type=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\" required>\r\n      <label for=\"floatingPassword\">Password</label>\r\n    </div>\r\n\r\n    <div class=\"checkbox mb-3\">\r\n      <label>\r\n        <input type=\"checkbox\" value=\"remember-me\"> Remember me\r\n      </label>\r\n    </div>\r\n    <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign in</button>\r\n    <p class=\"mt-5 mb-3 text-body-secondary\">&copy; 2017–2023</p>\r\n</form>"],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,QAAoB,gBAAgB;AAGnE,SAASC,QAAQ,QAAQ,sBAAsB;;;;;AAE/C,MAKaC,cAAc;EAMzBC,YACUC,IAAe,EACfC,MAAa;IADb,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,SAAS,GAAG,IAAIP,SAAS,CAAC;MACxBQ,QAAQ,EAAC,IAAIP,WAAW,CAAC,EAAE,CAAC;MAC5BQ,QAAQ,EAAC,IAAIR,WAAW,CAAC,EAAE;KAC5B,CAAC;EAKA;EAEFS,QAAQA,CAAA;IACN;IACA,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,gCAAgC,EAAE,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;MAACC,eAAe,EAAC;IAAI,CAAC,CAAC,CAC3FC,SAAS,CAACC,GAAG,IAAE;MACd,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3Bd,QAAQ,CAACe,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC,EACDC,GAAG,IAAE;MACHjB,QAAQ,CAACe,WAAW,CAACC,IAAI,CAAC,KAAK,CAAC;IAClC,CAAC,CACA;EACL;EAAC,QAAAE,CAAA,G;qBAtBUjB,cAAc,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdxB,cAAc;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX3Bb,EAAA,CAAAe,cAAA,cAAsD;QAAxBf,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;UAAA,OAAYH,GAAA,CAAAzB,QAAA,EAAU;QAAA,EAAC;QACjDW,EAAA,CAAAe,cAAA,YAA8B;QAAAf,EAAA,CAAAkB,MAAA,qBAAc;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QAEjDnB,EAAA,CAAAe,cAAA,aAA2B;QACzBf,EAAA,CAAAoB,SAAA,eAA+H;QAC/HpB,EAAA,CAAAe,cAAA,eAA2B;QAAAf,EAAA,CAAAkB,MAAA,oBAAa;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAElDnB,EAAA,CAAAe,cAAA,aAA2B;QACzBf,EAAA,CAAAoB,SAAA,eAA6H;QAC7HpB,EAAA,CAAAe,cAAA,eAA8B;QAAAf,EAAA,CAAAkB,MAAA,gBAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAGhDnB,EAAA,CAAAe,cAAA,cAA2B;QAEvBf,EAAA,CAAAoB,SAAA,gBAA2C;QAACpB,EAAA,CAAAkB,MAAA,qBAC9C;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAEVnB,EAAA,CAAAe,cAAA,iBAA2D;QAAAf,EAAA,CAAAkB,MAAA,eAAO;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAC3EnB,EAAA,CAAAe,cAAA,aAAyC;QAAAf,EAAA,CAAAkB,MAAA,6BAAgB;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;;;QAlB3DnB,EAAA,CAAAqB,UAAA,cAAAP,GAAA,CAAA5B,SAAA,CAAuB;;;;;;;SDWhBJ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}