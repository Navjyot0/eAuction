{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nclass AuthInterceptorService {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  intercept(req, next) {\n    const token = this.cookieService.get('jwtToken'); // you probably want to store it in localStorage or something\n    if (!token) {\n      return next.handle(req);\n    }\n    const req1 = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next.handle(req1);\n  }\n  static #_ = this.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthInterceptorService };","map":{"version":3,"names":["AuthInterceptorService","constructor","cookieService","intercept","req","next","token","get","handle","req1","clone","headers","set","_","i0","ɵɵinject","i1","CookieService","_2","factory","ɵfac","providedIn"],"sources":["D:\\FSE_Navjyot\\Git_Repo\\eAuction\\eAuction.UI\\src\\app\\auth-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private cookieService: CookieService) { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.cookieService.get('jwtToken'); // you probably want to store it in localStorage or something\r\n\r\n    if (!token) {\r\n      return next.handle(req);\r\n    }\r\n    const req1 = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\r\n    });\r\n\r\n    return next.handle(req1);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,MAGaA,sBAAsB;EAEjCC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAmB;EACpDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAG,IAAI,CAACJ,aAAa,CAACK,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAElD,IAAI,CAACD,KAAK,EAAE;MACV,OAAOD,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;;IAEzB,MAAMK,IAAI,GAAGL,GAAG,CAACM,KAAK,CAAC;MACrBC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUN,KAAK,EAAE;KAC5D,CAAC;IAEF,OAAOD,IAAI,CAACG,MAAM,CAACC,IAAI,CAAC;EAC1B;EAAC,QAAAI,CAAA,G;qBAdUb,sBAAsB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBlB,sBAAsB;IAAAmB,OAAA,EAAtBnB,sBAAsB,CAAAoB,IAAA;IAAAC,UAAA,EAFrB;EAAM;;SAEPrB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}