{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport { Emitters } from '../emitters/emitters';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-cookie-service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction MakeBidComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nlet MakeBidComponent = /*#__PURE__*/(() => {\n  class MakeBidComponent {\n    constructor(http, router, cookieService, route) {\n      this.http = http;\n      this.router = router;\n      this.cookieService = cookieService;\n      this.route = route;\n      this.bidForm = new FormGroup({\n        productId: new FormControl(''),\n        bidAmount: new FormControl(''),\n        buyerEmailId: new FormControl('')\n      });\n      this.user = `${this.cookieService.get('username')}`;\n      this.bidForm.patchValue({\n        buyerEmailId: `${this.cookieService.get('username')}`,\n        productId: this.route.snapshot.paramMap.get('productid')\n      });\n    }\n    onSubmit() {\n      // TODO: Use EventEmitter with form value\n      this.http.post(\"https://localhost:44300/e-auction/api/v1/buyer/place-bid\", this.bidForm.value, {\n        withCredentials: true\n      }).subscribe(res => {\n        Emitters.authEmitter.emit(true);\n        this.router.navigate(['/product-details/' + this.bidForm.value.productId]);\n      }, err => {\n        if (err.error.includes('Seller can\\'t make bid')) this.error = 'Seller can\\'t make bid';else if (err.error.includes('Bid end date was')) this.error = 'Bid end date was ended';else this.error = 'API failed, please try after sometime';\n        console.log(this.error);\n        Emitters.authEmitter.emit(false);\n      });\n    }\n    static #_ = this.ɵfac = function MakeBidComponent_Factory(t) {\n      return new (t || MakeBidComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CookieService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MakeBidComponent,\n      selectors: [[\"app-make-bid\"]],\n      decls: 16,\n      vars: 3,\n      consts: [[\"routerLink\", \"/\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"h3\", \"mb-3\", \"fw-normal\"], [1, \"form-floating\"], [\"formControlName\", \"bidAmount\", \"type\", \"number\", \"id\", \"bidAmount\", \"name\", \"bidAmount\", \"placeholder\", \"Bid Amount\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"bidAmount\"], [\"type\", \"submit\", 1, \"w-100\", \"btn\", \"btn-lg\", \"btn-primary\", 3, \"disabled\"], [2, \"color\", \"red\"]],\n      template: function MakeBidComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"a\", 0);\n          i0.ɵɵtext(2, \"back to list\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(3, \"hr\");\n          i0.ɵɵtemplate(4, MakeBidComponent_p_4_Template, 2, 1, \"p\", 1);\n          i0.ɵɵelementStart(5, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function MakeBidComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"h1\", 3);\n          i0.ɵɵtext(7, \"Make Bid\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 4);\n          i0.ɵɵelement(9, \"input\", 5);\n          i0.ɵɵelementStart(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Bid Amount\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"p\");\n          i0.ɵɵtext(13, \"Complete the form to enable button.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 7);\n          i0.ɵɵtext(15, \"Make Bid\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.bidForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", !ctx.bidForm.valid);\n        }\n      },\n      dependencies: [i4.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName]\n    });\n  }\n  return MakeBidComponent;\n})();\nexport { MakeBidComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}